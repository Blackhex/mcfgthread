/* This file is part of MCF Gthread.
 * See LICENSE.TXT for licensing information.
 * Copyleft 2022, LH_Mouse. All wrongs reserved.  */

__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   int8_t,   8_rlx, __ATOMIC_RELAXED, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int16_t,  16_rlx, __ATOMIC_RELAXED, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int32_t,  32_rlx, __ATOMIC_RELAXED, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int64_t,  64_rlx, __ATOMIC_RELAXED, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_( intptr_t, ptr_rlx, __ATOMIC_RELAXED, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   size_t,   z_rlx, __ATOMIC_RELAXED, __ATOMIC_RELAXED)

#if defined(__MCF_ATOMIC_HAS_ACQUIRE_)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   int8_t,   8_acq, __ATOMIC_ACQUIRE, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int16_t,  16_acq, __ATOMIC_ACQUIRE, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int32_t,  32_acq, __ATOMIC_ACQUIRE, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int64_t,  64_acq, __ATOMIC_ACQUIRE, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_( intptr_t, ptr_acq, __ATOMIC_ACQUIRE, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   size_t,   z_acq, __ATOMIC_ACQUIRE, __ATOMIC_ACQUIRE)
#endif  /* __MCF_ATOMIC_HAS_ACQUIRE_  */

#if defined(__MCF_ATOMIC_HAS_RELEASE_)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   int8_t,   8_rel, __ATOMIC_RELEASE, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int16_t,  16_rel, __ATOMIC_RELEASE, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int32_t,  32_rel, __ATOMIC_RELEASE, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int64_t,  64_rel, __ATOMIC_RELEASE, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_( intptr_t, ptr_rel, __ATOMIC_RELEASE, __ATOMIC_RELAXED)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   size_t,   z_rel, __ATOMIC_RELEASE, __ATOMIC_RELAXED)
#endif  /* __MCF_ATOMIC_HAS_RELEASE_  */

#if defined(__MCF_ATOMIC_HAS_ACQUIRE_) && defined(__MCF_ATOMIC_HAS_RELEASE_)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   int8_t,   8_arl, __ATOMIC_ACQ_REL, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int16_t,  16_arl, __ATOMIC_ACQ_REL, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int32_t,  32_arl, __ATOMIC_ACQ_REL, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int64_t,  64_arl, __ATOMIC_ACQ_REL, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_( intptr_t, ptr_arl, __ATOMIC_ACQ_REL, __ATOMIC_ACQUIRE)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   size_t,   z_arl, __ATOMIC_ACQ_REL, __ATOMIC_ACQUIRE)
#endif  /* __MCF_ATOMIC_HAS_ACQUIRE_ && __MCF_ATOMIC_HAS_RELEASE_  */

__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   int8_t,   8_cst, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int16_t,  16_cst, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int32_t,  32_cst, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(  int64_t,  64_cst, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_( intptr_t, ptr_cst, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)
__MCF_ALWAYS_INLINE __MCF_ATOMIC_FUNCTION_(   size_t,   z_cst, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)

/* Tidy everything.  */
#undef __MCF_ATOMIC_FUNCTION_
#undef __MCF_ATOMIC_HAS_ACQUIRE_
#undef __MCF_ATOMIC_HAS_RELEASE_
